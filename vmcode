code:
    input [value]
    2 byte
    000 + [value](12 bit) + extend_or_not(1 bit)
        - Set the value of register 'V'alue to 'value'
        - value: -2048 ~ 2047
        - value can be extended

    get-label
    getlb "[abc]"
    2 byte
    001 + [label](12 bit) + extend_or_not(1 bit)
        - Set label position to register 'A'ddress
        - label can be extended

    copy $[a] $[b]
    2 byte
    010 + [register a](3 bit) + [register b](3 bit) + 0_or_1(7 bit)
        - Copy the value of 'a' to 'b'
        - Not extendable

    jump $[a] if $[b] [J-code] $[c]
    2 byte
    011 + [register a](3 bit) + [register b](3 bit) + [jump code](3 bit) + [register c](3 bit) + 0_or_1(1 bit)
        - If register J-code, jump to address 'a'
        - J-code:
            000 nv Never
            001 >  b >  c
            010 == b == c
            011 >= b >= c
            100 <  b <  c
            101 != b != c
            110 <= b <= c
            111 aw Always
        - Not extendable

    [operation] $[a] $[b] $[c]
    2 byte
    100 [operation](3 bit) + [register a](3 bit) + [register b](3 bit) + [register c](3 bit) + 0_or_1(1 bit)
        - Operate $[a] and $[b] and save to $[c]
        - operation:
            000 add
            001 sub
            010 mul
            011 div
            100 rmv  # right move
            101 lmv  # left move
            110 and
            111 or_
        - Not extendable

    extend [value]
    2 byte
    101 + [value](15 bit) + extend_or_not(1 bit)
        - if extend_or_not == 1, [extendable value] = [extendable value] + value
        - value can be extended

    label "[abc]"
        - Create label

register:
    $A: Address   000
    $C: Condition 001
    $D: Data      010
    $L: Local     011
    $N: Now       100
    $M: Memory    101
    $P: Pointer   110
    $V: Value     111

    It is not recommended to set $A and $V manually.
    It is recommended to set commonly used constants to $N.
    $P and $M have special functions.
    $C, $D and %L are free to use.

syntactic sugar:
    jump "[abc]" $[b] [J-code] $[c]
        get-label "[abc]"
        jump $A $[b] [J-code] $[c]

    input $[a] [value]
        input [value]
        copy $V $[a]

    load $[a] $[b]
        copy $[a] $A
        copy $M $[b]

    store $[a] $[b]
        copy $[a] $A
        copy $[b] $M